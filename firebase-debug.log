[debug] [2021-09-23T18:06:10.248Z] ----------------------------------------------------------------------
[debug] [2021-09-23T18:06:10.250Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\padawan\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2021-09-23T18:06:10.251Z] CLI Version:   9.18.0
[debug] [2021-09-23T18:06:10.251Z] Platform:      win32
[debug] [2021-09-23T18:06:10.251Z] Node Version:  v14.17.6
[debug] [2021-09-23T18:06:10.252Z] Time:          Thu Sep 23 2021 13:06:10 GMT-0500 (Central Daylight Time)
[debug] [2021-09-23T18:06:10.252Z] ----------------------------------------------------------------------
[debug] 
[debug] [2021-09-23T18:06:10.258Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-09-23T18:06:10.258Z] > authorizing via signed-in user (sictcvending@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\padawan\Documents\IT-Vending-Machine

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Security Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[info] +  Default rules have been written to database.rules.json. 
[info] Future modifications to database.rules.json will update Realtime Database Security Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with sample code
[info] pre-configured. Functions can be deployed with firebase deploy.
[info] 
[info] +  Wrote functions/package.json 
[info] +  Wrote functions/index.js 
[info] +  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
